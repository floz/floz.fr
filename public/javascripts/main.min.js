// Generated by CoffeeScript 1.5.0-pre
var BasicButton, Home, Main, Menu, Module, ModuleManager, Project, ProjectDetails, ProjectImg, ProjectLayer, ProjectPreview, ProjectTitle,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Module = (function() {

  Module.prototype._$module = null;

  function Module(moduleName) {
    var $element, element, _i, _len, _ref;
    ModuleManager.register(this);
    this._$module = $(moduleName);
    _ref = [this._$module.find(".scrolling_content")];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      $element = $(element);
      $element.css({
        "top": $element.height()
      });
    }
  }

  Module.prototype.show = function() {
    return this._showBot(this._showTop() - .75);
  };

  Module.prototype.hide = function() {};

  Module.prototype._showTop = function(delay) {
    if (delay == null) {
      delay = 0;
    }
    return delay = this._showScrollingContents(this._$module.find("article.top .scrolling_content"), delay);
  };

  Module.prototype._showBot = function(delay) {
    if (delay == null) {
      delay = 0;
    }
    return delay = this._showScrollingContents(this._$module.find("article.bot .scrolling_content"), delay);
  };

  Module.prototype._showScrollingContents = function($cnt, delay) {
    var contents, element, _i, _len;
    if (delay == null) {
      delay = 0;
    }
    contents = $cnt;
    for (_i = 0, _len = contents.length; _i < _len; _i++) {
      element = contents[_i];
      TweenLite.to(element, .4, {
        top: 0,
        delay: delay,
        ease: Quad.easeOut
      });
      delay += 0.075;
    }
    return delay;
  };

  return Module;

})();

ModuleManager = (function() {

  function ModuleManager() {}

  ModuleManager.modules = [];

  ModuleManager.register = function(module) {
    return ModuleManager.modules.push(module);
  };

  return ModuleManager;

})();

Home = (function(_super) {

  __extends(Home, _super);

  function Home() {
    this._onPageLoadSuccess = __bind(this._onPageLoadSuccess, this);
    this._onProjectClick = __bind(this._onProjectClick, this);
    var $element, element, _i, _len, _ref;
    Home.__super__.constructor.call(this, "#home");
    _ref = this._$module.find(".scrolling_content");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      $element = $(element);
      $element.css({
        "top": $element.height()
      });
    }
    return;
  }

  Home.prototype._showBot = function(delay) {
    var $project, $projects, delayAdd, p, project, _i, _len, _results;
    if (delay == null) {
      delay = 0;
    }
    Home.__super__._showBot.call(this, delay);
    delayAdd = .2;
    $projects = this._$module.find("article.bot li");
    _results = [];
    for (_i = 0, _len = $projects.length; _i < _len; _i++) {
      project = $projects[_i];
      $project = $(project);
      p = new ProjectPreview($project);
      p.show(delay + .1);
      delay += delayAdd;
      delayAdd *= .92;
      if (delayAdd < .05) {
        delayAdd = .05;
      }
      _results.push($project.find("a").click(this._onProjectClick));
    }
    return _results;
  };

  Home.prototype._onProjectClick = function(e) {
    var href, projectName;
    e.preventDefault();
    href = e.currentTarget.href;
    projectName = href.split("/").pop();
    history.pushState({
      path: href
    }, "", href);
    return $.ajax({
      url: "/projects_ajax/" + projectName,
      success: this._onPageLoadSuccess
    });
  };

  Home.prototype._onPageLoadSuccess = function(data) {
    return $("#main_content").html(data);
  };

  return Home;

})(Module);

$(document).ready(function() {
  document.body.style.opacity = 1;
  return new Main();
});

Main = (function() {
  var show;

  function Main() {
    var menu;
    history.pushState({
      path: "/"
    }, "", "/");
    new Home();
    new Project();
    menu = new Menu();
    menu.show();
    show();
  }

  show = function() {
    var module, _i, _len, _ref;
    _ref = ModuleManager.modules;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      module = _ref[_i];
      module.show();
    }
  };

  return Main;

})();

Menu = (function() {

  Menu.prototype._bts = [];

  function Menu() {
    var bts;
    bts = this._bts;
    $("nav#menu li").each(function() {
      if (!$(this).hasClass("activated")) {
        return bts[bts.length] = new BasicButton($(this).find(".bt"));
      }
    });
  }

  Menu.prototype.show = function() {
    var bt, _i, _len, _ref, _results;
    _ref = this._bts;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      bt = _ref[_i];
      _results.push(bt.show());
    }
    return _results;
  };

  Menu.prototype.hide = function() {
    var bt, _i, _len, _ref, _results;
    _ref = this._bts;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      bt = _ref[_i];
      _results.push(bt.hide());
    }
    return _results;
  };

  return Menu;

})();

BasicButton = (function() {
  var out, over;

  function BasicButton(target) {
    this.target = target;
    console.log(this.target);
    $(this.target).hover(over, out);
    $(this.target).css("opacity", 0);
  }

  BasicButton.prototype.show = function(delay) {
    if (delay == null) {
      delay = 0;
    }
    return TweenLite.to(this.target, .4, {
      opacity: 1,
      delay: delay
    });
  };

  BasicButton.prototype.hide = function() {
    return TweenLite.to(this.target, .4, {
      opacity: 0
    });
  };

  over = function() {
    return TweenLite.to(this, .2, {
      color: "#ffffff",
      backgroundColor: "#ff9c66",
      ease: Quad.easeOut
    });
  };

  out = function() {
    return TweenLite.to(this, .2, {
      color: "#3d3944",
      backgroundColor: "#ffffff",
      ease: Quad.easeOut
    });
  };

  return BasicButton;

})();

ProjectPreview = (function() {

  function ProjectPreview(target) {
    this.target = target;
    this.activate = __bind(this.activate, this);
    this.out = __bind(this.out, this);
    this.over = __bind(this.over, this);
    this.$target = $(this.target);
    this.$project = this.$target.find(".project");
    this.projectTitle = new ProjectTitle(this.$target.find(".cnt_project_title"));
    this.projectImg = new ProjectImg(this.$target.find(".cnt_img"), this.$project);
    this.layer = new ProjectLayer(this.$target.find(".layer"));
    this.init();
  }

  ProjectPreview.prototype.init = function() {
    this.$projectHolder = this.$target.find(".project_holder");
    this.baseProjectWidth = this.$target.width();
    return this.$project.css({
      opacity: 0
    });
  };

  ProjectPreview.prototype.over = function() {
    this.projectTitle.over();
    return this.layer.show();
  };

  ProjectPreview.prototype.out = function() {
    this.projectTitle.out();
    return this.layer.hide();
  };

  ProjectPreview.prototype.show = function(delay) {
    this.projectImg.startLoad();
    this.projectTitle.show(delay);
    delay += .2;
    TweenLite.to(this.$project, .3, {
      autoAlpha: 1,
      delay: delay + .05,
      easing: Quad.easeOut
    });
    return TweenLite.to(this, delay + .4, {
      onComplete: this.activate
    });
  };

  ProjectPreview.prototype.activate = function() {
    return $(this.target).find("a").hover(this.over, this.out);
  };

  return ProjectPreview;

})();

ProjectTitle = (function() {

  function ProjectTitle($title) {
    this.$title = $title;
    this.onComplete = __bind(this.onComplete, this);
    this.$cnt = this.$title.find(".cnt");
    this.$txt = this.$title.find(".project_title");
    this.init();
  }

  ProjectTitle.prototype.over = function() {
    TweenLite.to(this.$title, .4, {
      backgroundColor: "#ff9c66",
      ease: Quad.easeOut
    });
    return TweenLite.to(this.$txt, .4, {
      color: "#fff",
      ease: Quad.easeOut
    });
  };

  ProjectTitle.prototype.out = function() {
    TweenLite.to(this.$title, .4, {
      backgroundColor: "#ffffff",
      ease: Quad.easeIn
    });
    return TweenLite.to(this.$txt, .4, {
      color: "#3d3944",
      ease: Quad.easeIn
    });
  };

  ProjectTitle.prototype.init = function() {
    this.width = this.$cnt.width();
    return this.$title.css({
      opacity: 0,
      width: this.width * .4
    });
  };

  ProjectTitle.prototype.show = function(delay) {
    TweenLite.to(this.$title, .3, {
      opacity: 1,
      width: this.width + 2,
      delay: delay,
      easing: Cubic.easeOut,
      onComplete: this.onComplete
    });
    return TweenLite.to(this.$txt, .3, {
      top: 0,
      delay: delay + .2,
      easing: Cubic.easeOut
    });
  };

  ProjectTitle.prototype.onComplete = function() {
    return this.$txt.css("width", "auto");
  };

  return ProjectTitle;

})();

ProjectLayer = (function() {

  function ProjectLayer($layer) {
    this.$layer = $layer;
    this.details = new ProjectDetails(this.$layer.find(".details"));
    this.init();
  }

  ProjectLayer.prototype.init = function() {
    this.$bg = this.$layer.find(".background");
    this.$btZoomCircle = this.$layer.find(".circle");
    this.$btZoomPlus = this.$layer.find(".plus");
    this.$bt = this.$layer.find(".bt");
    this.$btTxt = this.$layer.find(".bt .txt");
    TweenLite.set(this.$btZoomCircle, {
      autoAlpha: 0,
      scale: .8
    });
    TweenLite.set(this.$btZoomPlus, {
      autoAlpha: 0,
      scale: .8,
      autoAlpha: 0,
      rotation: 20
    });
    return TweenLite.set(this.$bt, {
      x: 20
    });
  };

  ProjectLayer.prototype.show = function(delay) {
    this.killTweens();
    TweenLite.set(this.$btTxt, {
      top: 10
    });
    TweenLite.to(this.$bg, .4, {
      autoAlpha: 1,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btZoomCircle, .2, {
      autoAlpha: 1,
      scale: 1,
      delay: .2,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btZoomPlus, .2, {
      autoAlpha: 1,
      scale: 1,
      rotation: 0,
      delay: .3,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$bt, .2, {
      x: 0,
      autoAlpha: 1,
      delay: .3,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btTxt, .2, {
      top: 0,
      delay: .45,
      easing: Cubic.easeOut
    });
    return this.details.show();
  };

  ProjectLayer.prototype.hide = function(delay) {
    this.details.hide();
    this.killTweens();
    TweenLite.to(this.$bg, .4, {
      autoAlpha: 0,
      delay: .2,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$btZoomCircle, .2, {
      autoAlpha: 0,
      scale: .8,
      delay: .05,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$btZoomPlus, .2, {
      autoAlpha: 0,
      scale: .8,
      rotation: 20,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$bt, .2, {
      x: 20,
      autoAlpha: 0,
      delay: .15,
      easing: Cubic.easeIn
    });
    return TweenLite.to(this.$btTxt, .2, {
      top: 0,
      easing: Cubic.easeIn
    });
  };

  ProjectLayer.prototype.killTweens = function() {
    TweenLite.killTweensOf(this.$bg);
    TweenLite.killTweensOf(this.$btZoomCircle);
    TweenLite.killTweensOf(this.$btZoomPlus);
    TweenLite.killTweensOf(this.$bt);
    return TweenLite.killTweensOf(this.$btTxt);
  };

  return ProjectLayer;

})();

ProjectDetails = (function() {

  function ProjectDetails($details) {
    this.$details = $details;
    this.$cnt = this.$details.find(".cnt");
    this.$txt = this.$details.find(".txt");
  }

  ProjectDetails.prototype.show = function(delay) {
    TweenLite.to(this.$details, .2, {
      bottom: 0,
      easing: Cubic.easeOut
    });
    return TweenLite.to(this.$txt, .2, {
      top: 0,
      delay: .25,
      easing: Cubic.easeOut
    });
  };

  ProjectDetails.prototype.hide = function(delay) {
    TweenLite.to(this.$details, .3, {
      bottom: -40,
      easing: Cubic.easeIn,
      delay: .15
    });
    return TweenLite.to(this.$txt, .2, {
      top: 11,
      easing: Cubic.easeIn
    });
  };

  return ProjectDetails;

})();

Project = (function(_super) {

  __extends(Project, _super);

  Project.prototype._btVisit = null;

  Project.prototype._$scrolling_content = null;

  Project.prototype._$lis = null;

  Project.prototype._$imgs = null;

  Project.prototype._$articleBot = null;

  function Project() {
    var $element, $holder, $img, element, img, p, _i, _j, _len, _len1, _ref, _ref1;
    Project.__super__.constructor.call(this, "#project");
    this._btVisit = new BasicButton($("#bt_visit .bt"));
    $holder = this._$module.find("#project_description .holder");
    $holder.css({
      "overflow": "hidden",
      "height": $holder.height()
    });
    this._$scrolling_content = this._$module.find("#project_description .scrolling_content");
    _ref = this._$scrolling_content;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      $element = $(element);
      $element.css({
        "top": $holder.height(),
        "position": "absolute"
      });
    }
    this._$lis = this._$module.find("#diaporama li");
    this._$imgs = this._$module.find("#diaporama li .img");
    _ref1 = this._$imgs;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      img = _ref1[_j];
      $img = $(img);
      p = new ProjectImg($(img).find(".cnt_img"), $img);
      p.startLoad();
    }
    this._$articleBot = this._$module.find("article.bot");
    this._$articleBot.css("opacity", 0);
  }

  Project.prototype._showTop = function(delay) {
    if (delay == null) {
      delay = 0;
    }
    delay = Project.__super__._showTop.call(this, delay);
    this._btVisit.show(delay - .3);
    return delay;
  };

  Project.prototype._showBot = function(delay) {
    if (delay == null) {
      delay = 0;
    }
    return TweenLite.to(this._$articleBot, .4, {
      opacity: 1,
      delay: delay + .75
    });
  };

  return Project;

})(Module);

ProjectImg = (function() {

  ProjectImg.prototype.widthImgOrigin = 0;

  ProjectImg.prototype.heightImgOrigin = 0;

  function ProjectImg($cntImg, $ref) {
    this.$cntImg = $cntImg;
    this.$ref = $ref;
    this.resize = __bind(this.resize, this);
    this.onImageLoaded = __bind(this.onImageLoaded, this);
    this.img = new Image();
    this.$img = $(this.img);
  }

  ProjectImg.prototype.startLoad = function() {
    this.img.src = this.$cntImg.attr("data-url_img");
    return this.$img.load(this.onImageLoaded);
  };

  ProjectImg.prototype.onImageLoaded = function() {
    this.$img.css("opacity", 0);
    this.$cntImg.append(this.img);
    this.widthImgOrigin = this.$img.width();
    this.heightImgOrigin = this.$img.height();
    $(window).resize(this.resize);
    this.resize();
    return TweenLite.to(this.img, .3, {
      autoAlpha: 1,
      easing: Quad.easeOut
    });
  };

  ProjectImg.prototype.resize = function() {
    var ratio, rh, rw;
    rw = this.$ref.width() / this.widthImgOrigin;
    rh = this.$ref.height() / this.heightImgOrigin;
    ratio = rw > rh ? rw : rh;
    this.$img.width(this.widthImgOrigin * ratio);
    this.$img.height(this.heightImgOrigin * ratio);
    this.$img.css({
      top: this.$ref.height() - this.$img.height() >> 1,
      left: this.$ref.width() - this.$img.width() >> 1
    });
    console.log(this.$img.width(), this.$img.height());
    return console.log(this.widthImgOrigin, ratio);
  };

  return ProjectImg;

})();
