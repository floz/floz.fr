// Generated by CoffeeScript 1.5.0-pre
var BasicButton, Home, Menu, Module, ModuleManager, ProjectDetails, ProjectImg, ProjectLayer, ProjectPreview, ProjectTitle, init, show,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Module = (function() {

  function Module() {
    this.init();
    ModuleManager.register(this);
  }

  Module.prototype.init = function() {};

  Module.prototype.show = function() {};

  Module.prototype.hide = function() {};

  return Module;

})();

ModuleManager = (function() {

  function ModuleManager() {}

  ModuleManager.modules = [];

  ModuleManager.register = function(module) {
    return ModuleManager.modules.push(module);
  };

  return ModuleManager;

})();

Home = (function(_super) {
  var showBot, showTop;

  __extends(Home, _super);

  function Home() {
    return Home.__super__.constructor.apply(this, arguments);
  }

  Home.prototype.init = function() {
    var element, _i, _len, _ref;
    _ref = [$("article.top .content"), $("article.bot h4")];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      element = $(element);
      element.css({
        "top": element.height()
      });
    }
  };

  Home.prototype.show = function() {
    return showBot(showTop() - .75);
  };

  showTop = function() {
    var contents, delay, element, _i, _len;
    delay = 0;
    contents = $("article.top .content");
    for (_i = 0, _len = contents.length; _i < _len; _i++) {
      element = contents[_i];
      TweenLite.to(element, .4, {
        top: 0,
        delay: delay,
        ease: Quad.easeOut
      });
      delay += 0.075;
    }
    return delay;
  };

  showBot = function(delay) {
    var $botTitle, $projects, i, p, _i, _ref, _results;
    $botTitle = $("article.bot h4");
    TweenLite.to($botTitle, .4, {
      top: 0,
      delay: delay,
      ease: Quad.easeOut
    });
    $projects = $("article.bot li");
    _results = [];
    for (i = _i = 0, _ref = $projects.length; _i < _ref; i = _i += 1) {
      p = new ProjectPreview($projects[i]);
      p.show(delay + .1);
      _results.push(delay += .2);
    }
    return _results;
  };

  Home.prototype.hide = function() {};

  return Home;

})(Module);

new Home;

$(document).ready(function() {
  return init();
});

init = function() {
  show();
  return new Menu();
};

show = function() {
  var module, _i, _len, _ref;
  _ref = ModuleManager.modules;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    module = _ref[_i];
    module.show();
  }
  $(".animated").each(function() {
    var $this;
    $this = $(this);
    $this.removeClass("hide");
    return $this.addClass("show");
  });
};

Menu = (function() {

  function Menu() {
    $("nav#menu li").each(function() {
      if (!$(this).hasClass("activated")) {
        return new BasicButton($(this).find(".bt"));
      }
    });
  }

  return Menu;

})();

BasicButton = (function() {
  var out, over;

  function BasicButton(target) {
    this.target = target;
    $(this.target).hover(over, out);
  }

  BasicButton.prototype.show = function() {
    return console.log("show");
  };

  BasicButton.prototype.hide = function() {
    return console.log("hide");
  };

  over = function() {
    return TweenLite.to(this, .2, {
      color: "#ffffff",
      backgroundColor: "#ff9c66",
      ease: Quad.easeOut
    });
  };

  out = function() {
    return TweenLite.to(this, .2, {
      color: "#3d3944",
      backgroundColor: "#ffffff",
      ease: Quad.easeOut
    });
  };

  return BasicButton;

})();

ProjectPreview = (function() {

  function ProjectPreview(target) {
    this.target = target;
    this.activate = __bind(this.activate, this);
    this.out = __bind(this.out, this);
    this.over = __bind(this.over, this);
    this.$target = $(this.target);
    this.projectTitle = new ProjectTitle(this.$target.find(".project_title"));
    this.projectImg = new ProjectImg(this.$target.find(".cnt_img"));
    this.layer = new ProjectLayer(this.$target.find(".layer"));
    this.init();
  }

  ProjectPreview.prototype.init = function() {
    this.$projectHolder = this.$target.find(".project_holder");
    this.$project = this.$target.find(".project");
    this.baseProjectWidth = this.$target.width();
    return this.$project.css({
      width: this.baseProjectWidth * .6,
      opacity: 0
    });
  };

  ProjectPreview.prototype.over = function() {
    return this.layer.show();
  };

  ProjectPreview.prototype.out = function() {
    return this.layer.hide();
  };

  ProjectPreview.prototype.show = function(delay) {
    this.projectImg.startLoad();
    this.projectTitle.show(delay);
    delay += .2;
    TweenLite.to(this.$project, .3, {
      width: this.baseProjectWidth,
      autoAlpha: 1,
      delay: delay + .05,
      easing: Quad.easeOut
    });
    return TweenLite.to(this, delay + .4, {
      onComplete: this.activate
    });
  };

  ProjectPreview.prototype.activate = function() {
    return $(this.target).find("a").hover(this.over, this.out);
  };

  return ProjectPreview;

})();

ProjectTitle = (function() {

  function ProjectTitle($title) {
    this.$title = $title;
    this.onComplete = __bind(this.onComplete, this);
    this.$cnt = this.$title.find(".cnt");
    this.$txt = this.$title.find("h3");
    this.init();
  }

  ProjectTitle.prototype.init = function() {
    this.width = this.$title.width();
    return this.$title.css({
      opacity: 0,
      width: this.width * .4
    });
  };

  ProjectTitle.prototype.show = function(delay) {
    TweenLite.to(this.$title, .3, {
      autoAlpha: 1,
      width: this.width + 2,
      delay: delay,
      easing: Cubic.easeOut,
      onComplete: this.onComplete
    });
    return TweenLite.to(this.$txt, .3, {
      top: 0,
      delay: delay + .2,
      easing: Cubic.easeOut
    });
  };

  ProjectTitle.prototype.onComplete = function() {
    return this.$cnt.css({
      width: "auto"
    });
  };

  return ProjectTitle;

})();

ProjectImg = (function() {

  function ProjectImg($cntImg) {
    this.$cntImg = $cntImg;
    this.onImageLoaded = __bind(this.onImageLoaded, this);
    this.img = new Image();
  }

  ProjectImg.prototype.startLoad = function() {
    this.img.src = this.$cntImg.attr("data-url_img");
    return $(this.img).load(this.onImageLoaded);
  };

  ProjectImg.prototype.onImageLoaded = function() {
    $(this.img).css("opacity", 0);
    this.$cntImg.append(this.img);
    return TweenLite.to(this.img, .3, {
      opacity: 1,
      easing: Quad.easeOut
    });
  };

  return ProjectImg;

})();

ProjectLayer = (function() {

  function ProjectLayer($layer) {
    this.$layer = $layer;
    this.details = new ProjectDetails(this.$layer.find(".details"));
    this.init();
  }

  ProjectLayer.prototype.init = function() {
    this.$bg = this.$layer.find(".background");
    this.$btZoomCircle = this.$layer.find(".circle");
    this.$btZoomPlus = this.$layer.find(".plus");
    this.$bt = this.$layer.find(".bt");
    this.$btTxt = this.$layer.find(".bt .txt");
    TweenLite.set(this.$btZoomCircle, {
      autoAlpha: 0,
      scale: .8
    });
    TweenLite.set(this.$btZoomPlus, {
      autoAlpha: 0,
      scale: .8,
      autoAlpha: 0,
      rotation: 20
    });
    return TweenLite.set(this.$bt, {
      x: 20
    });
  };

  ProjectLayer.prototype.show = function(delay) {
    this.killTweens();
    TweenLite.set(this.$btTxt, {
      top: 10
    });
    TweenLite.to(this.$bg, .4, {
      autoAlpha: 1,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btZoomCircle, .2, {
      autoAlpha: 1,
      scale: 1,
      delay: .2,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btZoomPlus, .2, {
      autoAlpha: 1,
      scale: 1,
      rotation: 0,
      delay: .3,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$bt, .2, {
      x: 0,
      autoAlpha: 1,
      delay: .3,
      easing: Cubic.easeOut
    });
    TweenLite.to(this.$btTxt, .2, {
      top: 0,
      delay: .45,
      easing: Cubic.easeOut
    });
    return this.details.show();
  };

  ProjectLayer.prototype.hide = function(delay) {
    this.details.hide();
    this.killTweens();
    TweenLite.to(this.$bg, .4, {
      autoAlpha: 0,
      delay: .2,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$btZoomCircle, .2, {
      autoAlpha: 0,
      scale: .8,
      delay: .05,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$btZoomPlus, .2, {
      autoAlpha: 0,
      scale: .8,
      rotation: 20,
      easing: Cubic.easeIn
    });
    TweenLite.to(this.$bt, .2, {
      x: 20,
      autoAlpha: 0,
      delay: .15,
      easing: Cubic.easeIn
    });
    return TweenLite.to(this.$btTxt, .2, {
      top: 0,
      easing: Cubic.easeIn
    });
  };

  ProjectLayer.prototype.killTweens = function() {
    TweenLite.killTweensOf(this.$bg);
    TweenLite.killTweensOf(this.$btZoomCircle);
    TweenLite.killTweensOf(this.$btZoomPlus);
    TweenLite.killTweensOf(this.$bt);
    return TweenLite.killTweensOf(this.$btTxt);
  };

  return ProjectLayer;

})();

ProjectDetails = (function() {

  function ProjectDetails($details) {
    this.$details = $details;
    this.$cnt = this.$details.find(".cnt");
    this.$txt = this.$details.find(".txt");
  }

  ProjectDetails.prototype.show = function(delay) {
    TweenLite.to(this.$details, .2, {
      bottom: 0,
      easing: Cubic.easeOut
    });
    return TweenLite.to(this.$txt, .2, {
      top: 0,
      delay: .25,
      easing: Cubic.easeOut
    });
  };

  ProjectDetails.prototype.hide = function(delay) {
    TweenLite.to(this.$details, .3, {
      bottom: -40,
      easing: Cubic.easeIn,
      delay: .15
    });
    return TweenLite.to(this.$txt, .2, {
      top: 11,
      easing: Cubic.easeIn
    });
  };

  return ProjectDetails;

})();
